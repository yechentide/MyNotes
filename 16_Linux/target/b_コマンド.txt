
● パイプ　＆　リダイレクト
	
	・パイプ　|　を使うと、コマンドの出力を別のコマンドへと渡して処理させることができる
		例：	ls | wc -l				// wcは行数・単語数・バイト数を表示できる、-lは行数のオプション
			ls /etc | less
	
	・実行結果をファイルに保存したいときに、リダイレクトを使う
		コマンド > 出力先ファイル名				// 上書きする
		コマンド >> 出力先ファイル名				// 末尾に追加する
	
	・特殊な意味を持つ符号、メタキャラクタの利用
		ワイルドカード・・・・・・ファイル名のパターンを表す記号
			*		0文字以上の任意の文字列
			?		任意の1文字

● 主な環境変数
	PATH			// コマンドやプログラムを検索するディレクトリのリスト
	USER			// 現在のユーザー名
	LANG			// 地域設定(言語処理方式)
	HOME			// 現在のユーザーのホームディレクトリ
	HISTSIZE		// コマンド履歴の最大値
	HISTFILE		// コマンド履歴の格納するファイル
	EDITOR			// 標準エディタ
	・環境変数の値を表示するには				echo $環境変数名
	・値を変更するには						export 環境変数名=value
										// シェルが終了するまで有効
										// いつも有効にしたければ、~/.bash_profileの末尾に上のコマンドを追加

● ファイルとディレクトリの操作
	・Linuxの主なディレクトリ
		/bin		// 一般ユーザーが実行できるコマンド
		/boot		// Linuxの起動に必要なファイル
		/dev		// 各種のデバイスを表す特殊ファイルを格納
		/etc		// システムの設定ファイルなど
		/home		// 一般のユーザーのホームディレクトリを格納
		/lib		// ライブラリー
		/lost+found // 破損したファイルを格納(普通は空)
		/media		// DVDなどの外部メディアがマウントされる
		/proc		// プロセス情報
		/root		// rootユーザーのホームディレクトリ
		/sbin		// 管理者ユーザーが実行できるコマンド
		/tmp		// 一時的なファイル置き場(temporary)
		/usr		// 各種コマンド、プログラム、ライブラリ、ドキュメントを格納
		/var		// ログファイルなど、書き換えが発生するファイル
	
	・絶対パス、相対パス
	・ホームディレクトリ
	・カレントディレクトリ
		$ pwd					// 現在いるディレクトリの確認
	・ファイル操作コマンド
		ls [オプション] [ファイル名orディレクトリ名]
			-l	// 詳細な情報を見る
		cp コピー元 コピー先
		mv 移動元 移動先
		mv 元ファイル名 新ファイル名
		rm ファイル名
		file ファイル名			// ファイルの種類を確認

● ファイル閲覧コマンド
	cat ファイル名
	less ファイル名
		SPACE		次のページ
		↑			上１行スクロール
		↓			下１行スクロール
		F			次のページ=SPACE
		B			前のページ
		Q			lessコマンドを終了する

● ディレクトリ操作コマンド
	mkdir ディレクトリ名
	rmdir ディレクトリ名
	rm -r ディレクトリ名
		-f	// 確認なしで削除

● 圧縮を展開
	.zip		圧縮コマンドは zip				展開コマンドは unzip
	.gz			圧縮コマンドは gzip			展開コマンドは gunzip
	.bz2		圧縮コマンドは bzip2			展開コマンドは bunzip2
	.xz			圧縮コマンドは xz				展開コマンドは xz -d
	
	元のファイルを残したい場合、オプション -k をつける
	
	tar オプション ディレクトリ
		-f ファイル名		// アーカイブファイルを指定する
		-c	// アーカイブを作成する
		-x	// アーカイブを展開する
		-z	// gzipの圧縮を使う
		-j	// bzip2の圧縮を使う
		-J	// xzの圧縮を使う
		-t	// アーカイブの内容を表示する
		-v	// 詳しく表示する
						例：　圧縮は　-cz　、解凍は　-xz　。　-cだけなら圧縮をかけてない

● パーミッション
	・アクセス権
		r: 読み取り可能　w: 書き込み可能　x: 実行可能
		アクセス権は ls -l で確認できる
			例：　-rw-r--r--
					2~4は所有者の、5~7はグループの、8~10はその他のユーザーのアクセス権
					数値で表すこともできる。「rは4、wは2、xは1」より例は644と表せる
						777 = rwxrwxrwx
						000 = ---------
						664 = rw-rw-r--
						644 = rw-r--r--
						600 = rw-------
						755 = rwxr-xr-x
	・アクセス権の変更
		chmod [-R] アクセス権 ファイル名/ディレクトリ名
			変更できるのは、所有者＆root
			アクセス権は記号で表しても数値で表しても良い
			所有者はu　グループはg　その他のユーザーはo　全てのユーザーはa
			権限の追加は+　削除は-　指定は=
				 例：	chmod uo+w aaa.txt			// uとoに、書き込み権を追加
				 		chmod 644 aaa.txt			// -rw-r--r-- にする
	・所有者と所有グループの変更
		# chown [-R] 所有者 ファイル名/ディレクトリ名
		# chgrp [-R] 所有グループ ファイル名/ディレクトリ名
		# chown [-R] 所有者:所有グループ ファイル名/ディレクトリ名























		